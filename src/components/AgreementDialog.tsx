
import { useState } from "react";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import SignatureCanvas from "./SignatureCanvas";
import { Idea } from "@/types";
import { FileText, Scroll, CheckCircle2, PenLine, FileSignature, ShieldCheck } from "lucide-react";
import { motion } from "framer-motion";

interface AgreementDialogProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  idea: Idea | null;
  onSignAgreement: (signatureData: string) => void;
  isLoading: boolean;
}

export const renderAgreementContent = (idea: Idea) => (
  <div className="py-6 px-8 bg-gradient-to-b from-primary/5 to-transparent rounded-lg">
    <div className="flex items-start gap-4 mb-6">
      <div className="p-3 rounded-full bg-primary/10 text-primary">
        <ShieldCheck className="h-6 w-6" />
      </div>
      <div>
        <h3 className="font-bold text-xl mb-2 text-primary">Investment Agreement</h3>
        <p className="text-muted-foreground text-sm">
          Document ID: INV-{Math.floor(Math.random() * 1000000).toString().padStart(6, '0')}
        </p>
      </div>
    </div>
    
    <div className="prose prose-sm max-w-none dark:prose-invert">
      <p className="leading-relaxed">This Agreement (the "Agreement") is made between the investor (hereinafter referred to as "Investor") and the idea owner (hereinafter referred to as "Idea Owner").</p>
      
      <h4 className="font-bold mt-6 mb-2 text-lg flex items-center gap-2">
        <span className="flex items-center justify-center h-6 w-6 rounded-full bg-primary/10 text-primary text-xs">1</span>
        Purpose
      </h4>
      <p className="leading-relaxed">The purpose of this Agreement is to establish the terms and conditions under which the Investor will provide funding for the development of the idea titled "{idea.title}" (the "Project").</p>
      
      <h4 className="font-bold mt-6 mb-2 text-lg flex items-center gap-2">
        <span className="flex items-center justify-center h-6 w-6 rounded-full bg-primary/10 text-primary text-xs">2</span>
        Investment Amount
      </h4>
      <p className="leading-relaxed">The Investor agrees to invest the sum of ${idea.estimatedPrice?.toLocaleString()} (the "Investment Amount") in the Project.</p>
      
      <h4 className="font-bold mt-6 mb-2 text-lg flex items-center gap-2">
        <span className="flex items-center justify-center h-6 w-6 rounded-full bg-primary/10 text-primary text-xs">3</span>
        Ownership and Profit Sharing
      </h4>
      <p className="leading-relaxed">In consideration for the Investment Amount, the Investor shall receive a 30% ownership stake in the Project and shall be entitled to 30% of all profits generated by the Project.</p>
      
      <h4 className="font-bold mt-6 mb-2 text-lg flex items-center gap-2">
        <span className="flex items-center justify-center h-6 w-6 rounded-full bg-primary/10 text-primary text-xs">4</span>
        Governance
      </h4>
      <p className="leading-relaxed">Major decisions regarding the Project shall require the approval of both the Investor and the Idea Owner.</p>
      
      <h4 className="font-bold mt-6 mb-2 text-lg flex items-center gap-2">
        <span className="flex items-center justify-center h-6 w-6 rounded-full bg-primary/10 text-primary text-xs">5</span>
        Term
      </h4>
      <p className="leading-relaxed">This Agreement shall remain in effect until terminated by mutual agreement of the parties or as provided herein.</p>
      
      <h4 className="font-bold mt-6 mb-2 text-lg flex items-center gap-2">
        <span className="flex items-center justify-center h-6 w-6 rounded-full bg-primary/10 text-primary text-xs">6</span>
        Confidentiality
      </h4>
      <p className="leading-relaxed">Both parties agree to maintain the confidentiality of all proprietary information related to the Project.</p>
      
      <div className="flex items-center mt-8 pt-4 border-t">
        <div className="flex items-center gap-2 text-sm text-muted-foreground">
          <CheckCircle2 className="h-4 w-4 text-green-500" />
          <span>This agreement is legally binding once signed by both parties</span>
        </div>
      </div>
    </div>
  </div>
);

const AgreementDialog = ({ 
  open, 
  onOpenChange, 
  idea, 
  onSignAgreement, 
  isLoading 
}: AgreementDialogProps) => {
  const [signatureData, setSignatureData] = useState<string | null>(null);
  const [agreementRead, setAgreementRead] = useState(false);
  
  const handleSignatureChange = (data: string) => {
    setSignatureData(data);
  };
  
  const handleSubmit = () => {
    if (signatureData) {
      onSignAgreement(signatureData);
    }
  };
  
  if (!idea) return null;
  
  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-4xl max-h-[90vh] overflow-hidden flex flex-col p-0">
        <DialogHeader className="p-6 bg-gradient-to-r from-primary/10 to-background">
          <div className="flex items-center gap-3">
            <div className="p-2 rounded-full bg-primary/20">
              <FileSignature className="h-6 w-6 text-primary" />
            </div>
            <div>
              <DialogTitle className="text-xl">
                Investment Agreement for "{idea.title}"
              </DialogTitle>
              <DialogDescription className="text-muted-foreground mt-1">
                Please review the terms and sign the agreement below.
              </DialogDescription>
            </div>
          </div>
        </DialogHeader>
        
        <div className="flex flex-col flex-1 overflow-hidden">
          <div 
            className="my-4 mx-6 overflow-y-auto border rounded-lg shadow-sm flex-1 bg-card"
            onScroll={(e) => {
              const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;
              if (scrollHeight - scrollTop <= clientHeight + 10) {
                setAgreementRead(true);
              }
            }}
          >
            <motion.div
              initial={{ opacity: 0, y: 10 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.4 }}
            >
              {renderAgreementContent(idea)}
            </motion.div>
          </div>
          
          {!agreementRead && (
            <div className="px-6 py-2">
              <div className="flex items-center justify-center gap-2 text-sm text-amber-600 dark:text-amber-400 bg-amber-50 dark:bg-amber-950/30 py-2 px-4 rounded-md">
                <Scroll className="h-4 w-4" />
                <span>Please read the entire agreement before signing</span>
              </div>
            </div>
          )}
          
          <div className="px-6 pt-2 pb-4">
            <div className="bg-muted/30 rounded-lg p-4">
              <div className="flex items-center gap-2 mb-4">
                <PenLine className="h-5 w-5 text-primary" />
                <h4 className="font-medium text-lg">Your Signature</h4>
              </div>
              <SignatureCanvas 
                onSave={handleSignatureChange} 
                width={window.innerWidth > 768 ? 700 : 300}
                height={200} 
              />
            </div>
          </div>
        </div>
        
        <DialogFooter className="p-6 bg-muted/20 border-t flex flex-col sm:flex-row gap-3">
          <div className="flex-1 hidden sm:flex items-center">
            {signatureData && (
              <motion.div 
                initial={{ opacity: 0, scale: 0.95 }}
                animate={{ opacity: 1, scale: 1 }}
                className="flex items-center gap-2 text-sm font-medium text-green-600 dark:text-green-400"
              >
                <CheckCircle2 className="h-5 w-5" />
                <span>Signature recorded</span>
              </motion.div>
            )}
          </div>
          <div className="flex gap-3 w-full sm:w-auto">
            <Button 
              variant="outline" 
              onClick={() => onOpenChange(false)}
              className="flex-1 sm:flex-auto"
            >
              Cancel
            </Button>
            <Button 
              onClick={handleSubmit} 
              disabled={!signatureData || !agreementRead || isLoading}
              className="flex-1 sm:flex-auto bg-primary hover:bg-primary/90 gap-1"
            >
              {isLoading ? "Processing..." : "Sign Agreement"}
              {!isLoading && <FileText className="h-4 w-4" />}
            </Button>
          </div>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
};

export default AgreementDialog;
